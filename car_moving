from OpenGL.GL import *
from OpenGL.GLU import *
from OpenGL.GLUT import *
from math import *
import numpy as np


def init():
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    gluPerspective(60,1,.1,50)
    gluLookAt(8,9,10,0,0,0,0,1,0)
    glClearColor(.2,.4,.2,1)
    glClear(GL_COLOR_BUFFER_BIT)
angle=0
x=0
forward=True


def draw_road():
    global x

    glColor3f(0,.1,.1)
    glBegin(GL_POLYGON)
    glVertex(30 ,2,0)
    glVertex(30 ,-5,0)
    glVertex(-50,-5,0)
    glVertex(-50,2,0)
    glEnd()
    glColor(1,1,1)
    glBegin(GL_POLYGON)
    glVertex(30+x, .3, 0)
    glVertex(30+x, -.3, 0)
    glVertex(-80+x, -1, 0)
    glVertex(-80+x, 1, 0)
    glEnd()
    glColor(.2, .4, .2)
    glBegin(GL_POLYGON)
    glVertex(30, 6, 0)
    glVertex(30, 2, 0)
    glVertex(-30, 2, 0)
    glVertex(-30, 6, 0)
    glEnd()
    glBegin(GL_POLYGON)
    glVertex(10, -5, 0)
    glVertex(10, -100, 0)
    glVertex(-100, -100, 0)
    glVertex(-100, -5, 0)
    glEnd()

def drawcircle(r=.1,xc=0,yc=0):
    glBegin(GL_POLYGON)
    for theta in np.arange (0,2*pi,.008):
        x=r*cos(theta)
        y = r * sin(theta)
        glColor3f(1,1,1)
        glVertex(x+xc,y+yc)

    glEnd()
def drawcirclee(r=.5,xc=0,yc=0):
    glBegin(GL_POLYGON)
    for theta in np.arange (0,2*pi,.05):
        x=r*cos(theta)
        y = r * sin(theta)
        glColor3f(.2,.5,0)
        glVertex(x+xc,y+yc)

    glEnd()




def draw_sky():
    glColor3f(0,.6,0.8)
    glBegin(GL_POLYGON)
    glVertex(10 ,10,0)
    glVertex(10 ,6,0)
    glVertex(-20,6,0)
    glVertex(-20,10,0)
    glEnd()
def draw():
    global x
    global angle
    global forward
    glClear(GL_COLOR_BUFFER_BIT)
    glMatrixMode(GL_MODELVIEW)
    glLoadIdentity()
    draw_sky()
    draw_road()
    
    #drawclouds
    drawcircle(.5,2+x,7)
    drawcircle(.3, 1.5 + x, 7)
    drawcircle(.3, 2.5 + x, 7)
    drawcircle(.5, -2 + x, 7)
    drawcircle(.3, -1.5 + x, 7)
    drawcircle(.3, -2.5 + x, 7)
    drawcircle(.5, 0 + x, 7)
    drawcircle(.3, -.5 + x, 7)
    drawcircle(.3, .5 + x, 7)
   #drawtrees
    glLoadIdentity()
    glBegin(GL_POLYGON)
    glColor3f(0, 0, 0)
    glVertex(5, -10, 0)
    glVertex(5, -5, 0)
    glVertex(5.8, -5, 0)
    glVertex(5.8, -10, 0)
    glEnd()
    drawcirclee(2, 5.5, -5)

    glLoadIdentity()
    glBegin(GL_POLYGON)
    glColor3f(0, 0, 0)
    glVertex(1, -10, 0)
    glVertex(1, -5, 0)
    glVertex(1.8, -5, 0)
    glVertex(1.8, -10, 0)
    glEnd()
    drawcirclee(2, 1, -5)
    glLoadIdentity()
    glBegin(GL_POLYGON)
    glColor3f(0, 0, 0)
    glVertex(-3, -10, 0)
    glVertex(-3, -5, 0)
    glVertex(-3.8, -5, 0)
    glVertex(-3.8, -10, 0)
    glEnd()
    drawcirclee(2, -3.4, -5)
    glLoadIdentity()
    glBegin(GL_POLYGON)
    glColor3f(0, 0, 0)
    glVertex(-8, -10, 0)
    glVertex(-8, -5, 0)
    glVertex(-9, -5, 0)
    glVertex(-9, -10, 0)
    glEnd()
    drawcirclee(2, -8.5, -5)
    glLoadIdentity()
    glBegin(GL_POLYGON)
    glColor3f(0, 0, 0)
    glVertex(-13, -10, 0)
    glVertex(-13, -5, 0)
    glVertex(-14, -5, 0)
    glVertex(-14, -10, 0)
    glEnd()
    drawcirclee(2, -13.5, -5)
#---------------

    glColor3f(.5, .6, .5)
    glTranslate(x, 0, 0 +car_z)
    glScale(1, .25, 0.5)
    glutSolidCube(5)

    glLoadIdentity()
    glTranslate(x + 0, 5 * .25, 0 +car_z)
    glScale(.5, .25, .5)

    glutSolidCube(5)

    glLoadIdentity()
    glTranslate(-2.5 + x, -2.5 * .25, -2.5 * .5 +car_z)
    glRotate(angle, 0, 0, 1)
    glColor3f(0, 0, 1)
    glutWireTorus(.2, .5, 12, 8)

    glLoadIdentity()
    glTranslate(-2.5 + x, -2.5 * .25, 2.5 * .5 +car_z)
    glColor3f(0, 0, 1)
    glRotate(angle, 0, 0, 1)
    glutWireTorus(.2, .5, 12, 8)

    glLoadIdentity()
    glTranslate(2.5 + x, -2.5 * .25, -2.5 * .5 +car_z)
    glColor3f(0, 0, 1)
    glRotate(angle, 0, 0, 1)
    glutWireTorus(.2, .5, 12, 8)

    glLoadIdentity()
    glTranslate(2.5 + x, -2.5 * .25, 2.5 * .5 +car_z)
    glColor3f(0, 0, 1)
    glRotate(angle, 0, 0, 1)
    glutWireTorus(.2, .5, 12, 8)
    glLoadIdentity()
    glColor3f(1,0,0)
    glTranslate(2.5 + x, -2.5 * .25, 2.5 * .5 +car_z)
    glutWireSphere(.3,5,8)
    glLoadIdentity()
    glColor3f(1, 0, 0)
    glTranslate(2.5 + x, -2.5 * .25, -2.5 * .5 +car_z)
    glutWireSphere(.3, 5, 8)
    glLoadIdentity()
    glColor3f(1, 0, 0)
    glTranslate(-2.5 + x, -2.5 * .25, -2.5 * .5 +car_z)
    glutWireSphere(.3, 5, 8)
    glLoadIdentity()
    glColor3f(1, 0, 0)
    glTranslate(-2.5 + x, -2.5 * .25, 2.5 * .5 +car_z)
    glutWireSphere(.3, 5, 8)
    glLoadIdentity()
    glColor3f(1, 1, 0)
    glTranslate(2.5 + x, -2.5 * .25, -1 * .5 +car_z)
    glutWireSphere(.3, 5, 8)
    glLoadIdentity()
    glColor3f(1, 1, 0)
    glTranslate(2.5 + x, -2.5 * .25, .7 * .5 +car_z)
    glutWireSphere(.3, 5, 8)
    glLoadIdentity()
    glBegin(GL_POLYGON)
    glColor3f(1, 1, 1)

    glVertex( 1.28+x, 0.75, 1.1   +car_z )
    glVertex( 1.28+x, 0.75, -1  +car_z)
    glVertex( 1.28+x, 1.5, -1 +car_z)
    glVertex( 1.28+x, 1.5, 1.1 +car_z)
    glEnd()
    glBegin(GL_POLYGON)
    glColor3f(1, 1, 1)
    glVertex(x + -.8, 1.5, 1.3 +car_z)
    glVertex(x + .5, 1.5, 1.3 +car_z)
    glVertex(x + .5, .75, 1.3 +car_z)
    glVertex(x + -.8, .75, 1.3 +car_z)
    glEnd()



    #glBegin(GL_LINES)
    #glColor3f(1, 0, 0)
    #glVertex(0, 0, 0)
    #glVertex(10, 0, 0)
    #glColor3f(0, 0, 1)
    #glVertex(0, 0, 0)
    ##glVertex(0, 0, 10)
    #glColor3f(1, 0, 0)
    #glVertex(0, 0, 0)
    #glVertex(10, 0, 0)
    #glColor3f(0, 1, 0)
    #glVertex(0, 0, 0)
    #glVertex(0, 10, 0)

    #glEnd()
    if forward:
        angle -= .9
        x += 0.05
        if x>5:
           forward=False
    else:
        angle+=.9
        x-=.05
        if x<-5:
            forward=True

    glutSwapBuffers()

car_z=0
def keyboard(key, x, y):
    global car_z
    if key == GLUT_KEY_RIGHT:
        car_z +=.1
    elif key == GLUT_KEY_LEFT:
        car_z -=.1
    draw()
glutInit()
glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
glutInitWindowSize(700, 700)
glutCreateWindow(b"car")
glutDisplayFunc(draw)
glutIdleFunc(draw)
glutSpecialFunc(keyboard)
init()

glutMainLoop()
